# Network Intrusion Detection System (NIDS) Lab Environment

This project contains custom Suricata IDS rules and documentation for a virtualized security lab environment designed to detect network reconnaissance scans, brute-force login attempts, and malware C2 beaconing.

## Overview

The lab environment uses Suricata deployed on an Ubuntu Server virtual machine to monitor network traffic generated by an attacker Virtual Machine (Kali Linux) targeting a Virtual Machine (Ubuntu Server). Custom rules detect simulated attack behaviors and generate alerts.

## Requirements

- Oracle VirtualBox or VMware for Virtual Machine virtualization
- Kali Linux Virtual Machine with pentesting tools (Nmap, Hydra, Metasploit)
- Ubuntu Server Virtual Machine for target services (SSH, FTP, HTTP)
- Ubuntu Server Virtual Machine with Suricata installed for NIDS

## Installation and Setup

### Suricata Installation on NIDS Virtual Machine

sudo apt update
sudo apt install suricata

### Configure Suricata

- Set the network interface to monitor in `/etc/suricata/suricata.yaml`.
- Enable JSON logging and configure custom rules file inclusion.

### Deploy Custom Rules

- Place `custom.rules` in `/etc/suricata/rules/`.
- Ensure `suricata.yaml` references `custom.rules`.
- Restart Suricata:
sudo systemctl restart suricata


## Usage: Generating Test Traffic

### Reconnaissance Scans (Nmap)

nmap -sS -p 1-65535 -T4 <Target_IP>
nmap -sF <Target_IP>
nmap -sX <Target_IP>


### Brute-Force Attacks (Hydra)

hydra -l root -P /usr/share/wordlists/rockyou.txt ssh://<Target_IP>

text

### Simple C2 Beacon (Python Script)

import time
import requests
while True:
requests.get("http://<C2-server>/beacon")
time.sleep(10)

## Log Location and Alert Review

- Alerts are logged in `/var/log/suricata/eve.json`.
- Quick summaries are available in `/var/log/suricata/fast.log`.

## Recommendations

- Adjust IP ranges (`HOME_NET`, `EXTERNAL_NET`) in Suricata config for your environment.
- Tune detection rules and thresholds to reduce false positives.
- Expand custom rules for additional detection as required.
